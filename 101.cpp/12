string s;
   cin>>s;
   int x=(s.size()+1)/2;
   int y[x],z=0,f=0,min=0;
   while(z<s.size())
	   {y[f++]=s[z];
	   z+=2;
	   }
   for(int i=0;i<x;i++)
   {
	   min=i;
	   for(int k=i+1;k<x;k++)
		   if(y[k]<y[min])
			   min=k;
	   swap(y[min],y[i]);
   }
   z=0,f=0;
   while(z<s.size())
	   {
	   s[z]=y[f++];
	   z+=2;
	   }
   cout<<s;
        return 0;
}
int main()
{
    int a = 0;
    string s;
    cin >> s;
    int h[s.size()/2 + 1];
    for(int hg = 0;hg < s.size();hg += 2)
    {
        h[a] = s[hg];
        a = a + 1;
    }
    byn_is_massive(h,s.size()/2 + 1,-48);
    sort(h,h + s.size()/2 + 1);
    cout_massive(h,s.size()/2 + 1,"+");
    return 0;
}
#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <cmath>
#include <map>
//#include <bits>
using namespace std;
const int MAXN = 1e5;
int main() {
	ios::sync_with_stdio(false) , cin.tie(0) , cout.tie(0);
	string s;
	int ones = 0 , twos = 0 , threes = 0;
	cin >> s;
	for(int i = 0 ; i < s.size() ; i++)
	{
		if(s[ i ] == '1')
			ones++;
		if(s[ i ] == '2')
			twos++;
		if(s[ i ] == '3')
			threes++;	
	}
	if(ones != 0)
	{
		cout << 1;
		for(int i = 0 ; i < ones - 1 ; i++)
			cout << '+' << 1;
		for(int i = 0 ; i < twos  ; i++)
			cout << '+' << 2;
		for(int i = 0 ; i < threes ; i++)
			cout << '+' << 3;	
		return 0;	
	}
	if(twos != 0)
	{
		cout << 2;
		for(int i = 0 ; i < twos - 1 ; i++)
			cout << '+' << 2;
		for(int i = 0 ; i < threes ; i++)
			cout << '+' << 3;	
		return 0;	
	}
	if(threes != 0)
	{
		cout << 3;
		for(int i = 0 ; i < threes - 1; i++)
			cout << '+' << 3;
		return 0;	
	}
}
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
 
int main() {
	string s;
	vector<int> ans;
	cin >> s;
	for (int i = 0; i < s.size(); i++) {
		if (s[i] >= '0' && s[i] <= '9')
			ans.push_back(s[i] - '0');
	}
	sort(ans.begin(), ans.end());
	cout << ans[0];
	for (int i = 1; i < ans.size(); i++) {
		cout << "+" << ans[i];
	}
	return 0;
}
